name: Deploy

on:
  push:
    branches: [main]

jobs:
  setup:
    runs-on: x86_64-linux

    outputs:
      nodes: ${{ steps.get_attrs.outputs.nodes }}
      hosts: ${{ steps.get_attrs.outputs.hosts }}
      users: ${{ steps.get_attrs.outputs.users }}
      old_sha: ${{ steps.get_commits.outputs.old_sha }}
      new_sha: ${{ steps.get_commits.outputs.new_sha }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get Attrs
        id: get_attrs
        run: |
          {
            echo "nodes=$(nix eval --json --apply builtins.attrNames .#deploy.nodes)"
            echo "hosts=$(nix eval --json --apply builtins.attrNames .#nixosConfigurations)"
            echo "users=$(nix eval --json --apply builtins.attrNames .#homeConfigurations)"
          } >> "$GITHUB_OUTPUT"

      - name: Get Commits
        id: get_commits
        run: |
          echo "old_sha=$(git rev-parse HEAD^1)" >> "$GITHUB_OUTPUT"
          echo "new_sha=$(git rev-parse HEAD^0)" >> "$GITHUB_OUTPUT"

      - name: Checks...
        uses: poseidon/wait-for-status-checks@v0.5.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          match_pattern: ^flake$|^prebuild$

  deploy:
    runs-on: x86_64-linux
    environment: ${{ matrix.node }}

    needs: setup
    strategy:
      matrix:
        node: ${{ fromJSON(needs.setup.outputs.nodes) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#deploy

      - name: Build & Deploy
        env:
          SSHOPTS: -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /run/agenix/key-deploy
        run: deploy -s --ssh-opts "$SSHOPTS" .#${{ matrix.node }}

  diff-nixos:
    runs-on: x86_64-linux

    needs: [deploy, setup]
    strategy:
      matrix:
        host: ${{ fromJSON(needs.setup.outputs.hosts) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#diff

      - name: Check Commits
        id: check_commits
        run: |
          old_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.host }}"' github:${{ github.repository }}/${{ needs.setup.outputs.old_sha }}#nixosConfigurations)"
          new_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.host }}"' github:${{ github.repository }}/${{ needs.setup.outputs.new_sha }}#nixosConfigurations)"
          echo "exists=$(echo "$old_exists && $new_exists" | jq -c)" >> "$GITHUB_OUTPUT"

      - name: Build Config
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: |
          nix build --no-write-lock-file -o old github:${{ github.repository }}/${{ needs.setup.outputs.old_sha }}#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel
          nix build --no-write-lock-file -o new github:${{ github.repository }}/${{ needs.setup.outputs.new_sha }}#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel

      - name: Create Diff
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: nvd diff old new > ${{ matrix.host }}.diff

      - name: Upload Diff
        uses: actions/upload-artifact@v4
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        with:
          name: ${{ matrix.host }}
          path: ${{ matrix.host }}.diff

  diff-home:
    runs-on: x86_64-linux

    needs: [deploy, setup]
    strategy:
      matrix:
        user: ${{ fromJSON(needs.setup.outputs.users) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#diff

      - name: Check Commits
        id: check_commits
        run: |
          old_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.user }}"' github:${{ github.repository }}/${{ needs.setup.outputs.old_sha }}#homeConfigurations)"
          new_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.user }}"' github:${{ github.repository }}/${{ needs.setup.outputs.new_sha }}#homeConfigurations)"
          echo "exists=$(echo "$old_exists && $new_exists" | jq -c)" >> "$GITHUB_OUTPUT"

      - name: Build Config
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: |
          nix build --no-write-lock-file -o old github:${{ github.repository }}/${{ needs.setup.outputs.old_sha }}#homeConfigurations.${{ matrix.user }}.activationPackage
          nix build --no-write-lock-file -o new github:${{ github.repository }}/${{ needs.setup.outputs.new_sha }}#homeConfigurations.${{ matrix.user }}.activationPackage

      - name: Create Diff
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: nvd diff old new > ${{ matrix.user }}.diff

      - name: Upload Diff
        uses: actions/upload-artifact@v4
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        with:
          name: ${{ matrix.user }}
          path: ${{ matrix.user }}.diff

  commit:
    runs-on: ubuntu-latest

    needs: [diff-nixos, diff-home]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Diffs
        uses: actions/download-artifact@v4

      - name: Concatenate Diffs
        run: |
          for diff in ./*/*.diff; do
            echo -e "\n### Diff for $(basename "$diff" .diff)" >> msg.txt
            cat "$diff" >> msg.txt
          done

      - name: Commit Changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit --allow-empty -m "chore: add changes
          $(cat msg.txt)

          skip-checks: true"
          git push
