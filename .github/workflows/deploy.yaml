name: Deploy

on:
  push:
    branches: [main]

jobs:
  pre-deploy:
    runs-on: ubuntu-latest

    outputs:
      hosts: ${{ steps.get_hosts.outputs.hosts }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: accept-flake-config = true

      - name: Get Hosts
        id: get_hosts
        run: |
          hosts="$(nix eval .#deploy.nodes --apply builtins.attrNames)"
          echo "hosts=$hosts" >> "$GITHUB_OUTPUT"

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ matrix.host }}

    needs: pre-deploy
    strategy:
      matrix:
        host: ${{ fromJSON(needs.pre-deploy.outputs.hosts) }}

    steps:
      - name: Setup Nix
        uses: ElliottSullingeFarrall/dotfiles/.github/actions/setup@main
        with:
          shell: deploy

      - name: Setup TailScale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_CLIENT_SECRET }}
          tags: tag:deploy

      - name: Setup SSH
        uses: Wandalen/wretry.action@v3.5.0
        with:
          command: | # avoid using magicDNS due to bugs
            mkdir -p ~/.ssh
            ipv4="$(tailscale ip -4 ${{ matrix.host }})"
            ssh-keyscan "$ipv4" >> ~/.ssh/known_hosts
            echo "ipv4=$ipv4" >> "$GITHUB_ENV"

      - name: Checks...
        uses: poseidon/wait-for-status-checks@v0.5.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignore_pattern: deploy \(.+\)

      - name: Build & Deploy
        uses: Wandalen/wretry.action@v3.5.0
        with:
          command: |
            deploy -s --hostname "$ipv4" --ssh-user deploy .#${{ matrix.host }}
