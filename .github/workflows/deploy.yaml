name: Deploy

on:
  push:
    branches: [main]

jobs:
  setup:
    runs-on: x86_64-linux

    outputs:
      old_rev: ${{ steps.get_commits.outputs.old_rev }}
      new_rev: ${{ steps.get_commits.outputs.new_rev }}
      nodes: ${{ steps.get_attrs.outputs.nodes }}
      nixos: ${{ steps.get_attrs.outputs.nixos }}
      home: ${{ steps.get_attrs.outputs.home }}
      darwin: ${{ steps.get_attrs.outputs.darwin }}
      iso: ${{ steps.get_attrs.outputs.iso }}
      vm-nogui: ${{ steps.get_attrs.outputs.vm-nogui }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get Commits
        id: get_commits
        run: |
          echo "old_rev=$(git rev-parse HEAD^1)" >> "$GITHUB_OUTPUT"
          echo "new_rev=$(git rev-parse HEAD^0)" >> "$GITHUB_OUTPUT"

      - name: Get Attrs
        id: get_attrs
        run: |
          {
            echo "nodes=$(nix eval --json --apply builtins.attrNames .#deploy.nodes || echo '[]')"
            echo "nixos=$(nix eval --json --apply builtins.attrNames .#nixosConfigurations || echo '[]' )"
            echo "home=$(nix eval --json --apply builtins.attrNames .#homeConfigurations || echo '[]' )"
            echo "darwin=$(nix eval --json --apply builtins.attrNames .#darwinConfigurations || echo '[]' )"
            echo "iso=$(nix eval --json --apply builtins.attrNames .#isoConfigurations || echo '[]' )"
            echo "vm-nogui=$(nix eval --json --apply builtins.attrNames .#vm-noguiConfigurations || echo '[]' )"
          } >> "$GITHUB_OUTPUT"

      - name: Checks...
        uses: int128/wait-for-workflows-action@v1
        with:
          filter-workflow-names: Check
  deploy:
    runs-on: x86_64-linux
    environment: ${{ matrix.node }}

    needs: setup
    strategy:
      matrix:
        node: ${{ fromJSON(needs.setup.outputs.nodes) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#deploy

      - name: Build & Deploy
        env:
          SSHOPTS: -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /run/agenix/key-deploy
        run: deploy -s --ssh-opts "$SSHOPTS" .#${{ matrix.node }}

  diff-nixos:
    runs-on: x86_64-linux
    if: needs.setup.outputs.nixos != '[]'

    needs: [deploy, setup]
    strategy:
      matrix:
        config: ${{ fromJSON(needs.setup.outputs.nixos) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#diff

      - name: Check Commits
        id: check_commits
        run: |
          old_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.old_rev }}#nixosConfigurations")"
          new_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.new_rev }}#nixosConfigurations")"
          echo "exists=$(echo "$old_exists && $new_exists" | jq -c)" >> "$GITHUB_OUTPUT"

      - name: Build Config
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: |
          nix build --no-write-lock-file -o old ".?rev=${{ needs.setup.outputs.old_rev }}#nixosConfigurations.${{ matrix.config }}.config.system.build.toplevel"
          nix build --no-write-lock-file -o new ".?rev=${{ needs.setup.outputs.new_rev }}#nixosConfigurations.${{ matrix.config }}.config.system.build.toplevel"

      - name: Create Diff
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: nvd diff old new > ${{ matrix.config }}.nixos.diff

      - name: Upload Diff
        uses: actions/upload-artifact@v4
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        with:
          name: nixos-${{ matrix.config }}
          path: ${{ matrix.config }}.nixos.diff

  diff-home:
    runs-on: x86_64-linux
    if: needs.setup.outputs.home != '[]'

    needs: [deploy, setup]
    strategy:
      matrix:
        config: ${{ fromJSON(needs.setup.outputs.home) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#diff

      - name: Check Commits
        id: check_commits
        run: |
          old_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.old_rev }}#homeConfigurations")"
          new_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.new_rev }}#homeConfigurations")"
          echo "exists=$(echo "$old_exists && $new_exists" | jq -c)" >> "$GITHUB_OUTPUT"

      - name: Build Config
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: |
          nix build --no-write-lock-file -o old ".?rev=${{ needs.setup.outputs.old_rev }}#homeConfigurations.${{ matrix.config }}.activationPackage"
          nix build --no-write-lock-file -o new ".?rev=${{ needs.setup.outputs.new_rev }}#homeConfigurations.${{ matrix.config }}.activationPackage"

      - name: Create Diff
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: nvd diff old new > ${{ matrix.config }}.home.diff

      - name: Upload Diff
        uses: actions/upload-artifact@v4
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        with:
          name: home-${{ matrix.config }}
          path: ${{ matrix.config }}.home.diff

  diff-darwin:
    runs-on: x86_64-linux
    if: needs.setup.outputs.darwin != '[]'

    needs: [deploy, setup]
    strategy:
      matrix:
        config: ${{ fromJSON(needs.setup.outputs.darwin) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#diff

      - name: Check Commits
        id: check_commits
        run: |
          old_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.old_rev }}#darwinConfigurations")"
          new_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.new_rev }}#darwinConfigurations")"
          echo "exists=$(echo "$old_exists && $new_exists" | jq -c)" >> "$GITHUB_OUTPUT"

      - name: Build Config
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: |
          nix build --no-write-lock-file -o old ".?rev=${{ needs.setup.outputs.old_rev }}#darwinConfigurations.${{ matrix.config }}.system"
          nix build --no-write-lock-file -o new ".?rev=${{ needs.setup.outputs.new_rev }}#darwinConfigurations.${{ matrix.config }}.system"

      - name: Create Diff
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: nvd diff old new > ${{ matrix.config }}.darwin.diff

      - name: Upload Diff
        uses: actions/upload-artifact@v4
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        with:
          name: darwin-${{ matrix.config }}
          path: ${{ matrix.config }}.darwin.diff

  diff-iso:
    runs-on: x86_64-linux
    if: needs.setup.outputs.iso != '[]'

    needs: [deploy, setup]
    strategy:
      matrix:
        config: ${{ fromJSON(needs.setup.outputs.iso) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#diff

      - name: Check Commits
        id: check_commits
        run: |
          old_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.old_rev }}#isoConfigurations")"
          new_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.new_rev }}#isoConfigurations")"
          echo "exists=$(echo "$old_exists && $new_exists" | jq -c)" >> "$GITHUB_OUTPUT"

      - name: Build Config
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: |
          nix build --no-write-lock-file -o old ".?rev=${{ needs.setup.outputs.old_rev }}#isoConfigurations.${{ matrix.config }}"
          nix build --no-write-lock-file -o new ".?rev=${{ needs.setup.outputs.new_rev }}#isoConfigurations.${{ matrix.config }}"

      - name: Create Diff
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: nvd diff old new > ${{ matrix.config }}.iso.diff

      - name: Upload Diff
        uses: actions/upload-artifact@v4
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        with:
          name: iso-${{ matrix.config }}
          path: ${{ matrix.config }}.iso.diff

  diff-vm-nogui:
    runs-on: x86_64-linux
    if: needs.setup.outputs.vm-nogui != '[]'

    needs: [deploy, setup]
    strategy:
      matrix:
        config: ${{ fromJSON(needs.setup.outputs.vm-nogui) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Activate Shell
        uses: nicknovitski/nix-develop@v1
        with:
          arguments: .#diff

      - name: Check Commits
        id: check_commits
        run: |
          old_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.old_rev }}#vm-noguiConfigurations")"
          new_exists="$(nix eval --no-write-lock-file --apply 'builtins.hasAttr "${{ matrix.config }}"' ".?rev=${{ needs.setup.outputs.new_rev }}#vm-noguiConfigurations")"
          echo "exists=$(echo "$old_exists && $new_exists" | jq -c)" >> "$GITHUB_OUTPUT"

      - name: Build Config
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: |
          nix build --no-write-lock-file -o old ".?rev=${{ needs.setup.outputs.old_rev }}#vm-noguiConfigurations.${{ matrix.config }}"
          nix build --no-write-lock-file -o new ".?rev=${{ needs.setup.outputs.new_rev }}#vm-noguiConfigurations.${{ matrix.config }}"

      - name: Create Diff
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        run: nvd diff old new > ${{ matrix.config }}.vm-nogui.diff

      - name: Upload Diff
        uses: actions/upload-artifact@v4
        if: ${{ steps.check_commits.outputs.exists == 'true' }}
        with:
          name: vm-nogui-${{ matrix.config }}
          path: ${{ matrix.config }}.vm-nogui.diff

  commit:
    runs-on: ubuntu-latest
    if: ${{ !failure() && !cancelled() }}

    needs:
      - diff-nixos
      - diff-home
      - diff-darwin
      - diff-iso
      - diff-vm-nogui

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Import Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Download Diffs
        uses: actions/download-artifact@v4

      - name: Append Diff (nixos)
        if: needs.diff-nixos.result == 'success'
        run: |
          echo -e "\n### nixos ###\n\n" >> msg.txt
          for diff in ./*/*.nixos.diff; do
            echo -e "\n### $(basename "$diff" .nixos.diff)" >> msg.txt
            cat "$diff" >> msg.txt
          done

      - name: Append Diff (home)
        if: needs.diff-home.result == 'success'
        run: |
          echo -e "\n### home ###\n\n" >> msg.txt
          for diff in ./*/*.home.diff; do
            echo -e "\n### $(basename "$diff" .home.diff)" >> msg.txt
            cat "$diff" >> msg.txt
          done

      - name: Append Diff (darwin)
        if: needs.diff-darwin.result == 'success'
        run: |
          echo -e "\n### darwin ###\n\n" >> msg.txt
          for diff in ./*/*.darwin.diff; do
            echo -e "\n### $(basename "$diff" .darwin.diff)" >> msg.txt
            cat "$diff" >> msg.txt
          done

      - name: Append Diff (iso)
        if: needs.diff-iso.result == 'success'
        run: |
          echo -e "\n### iso ###\n\n" >> msg.txt
          for diff in ./*/*.iso.diff; do
            echo -e "\n### $(basename "$diff" .iso.diff)" >> msg.txt
            cat "$diff" >> msg.txt
          done

      - name: Append Diff (vm-nogui)
        if: needs.diff-vm-nogui.result == 'success'
        run: |
          echo -e "\n### vm-nogui ###\n\n" >> msg.txt
          for diff in ./*/*.vm-nogui.diff; do
            echo -e "\n### $(basename "$diff" .vm-nogui.diff)" >> msg.txt
            cat "$diff" >> msg.txt
          done

      - name: Finalise Message
        run: |
          touch msg.txt
          sed -i 's/#\([0-9]\)/#⁠/' msg.txt

      - name: Commit Changes
        run: |
          git commit --allow-empty -S -m "chore: add changes
          $(cat msg.txt)

          skip-checks: true"
          git push
